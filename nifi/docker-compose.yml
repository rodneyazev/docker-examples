version: "3.9"
services:
  nifi:
    user: root
    image: apache/nifi:latest
    container_name: "nifi"
    hostname: "nifi"
    ports:
      - "9090:8181"
      # - "8443:8443"
    environment:
      NIFI_WEB_HTTP_PORT: 8181
      # NIFI_WEB_HTTPS_PORT: 8443
      # SINGLE_USER_CREDENTIALS_USERNAME: admin
      # SINGLE_USER_CREDENTIALS_PASSWORD: admin
    volumes:
      - ~/data/nifi/nifi-current/database_repository:/opt/nifi/nifi-current/database_repository
      - ~/data/nifi/nifi-current/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ~/data/nifi/nifi-current/content_repository:/opt/nifi/nifi-current/content_repository
      - ~/data/nifi/nifi-current/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ~/data/nifi/nifi-current/state:/opt/nifi/nifi-current/state
      - ~/data/nifi/nifi-current/logs:/opt/nifi/nifi-current/logs
      - ./addresses.csv:/opt/nifi/nifi-current/content/addresses.csv
      - ./postgresql-42.5.1.jar:/opt/nifi/nifi-current/lib/postgresql-42.5.1.jar
      #- ~/data/nifi/nifi-current/conf:/opt/nifi/nifi-current/conf
      #
      # Just uncomment the line above after persist NiFi backup files, copying /conf directory from the container to your local directory, running the following command in this case:
      #
      # sudo docker cp nifi:/opt/nifi/nifi-current/ ~/data/nifi/nifi-current/
      #
    networks:
      - my-network
networks:
  my-network:
      name: my-network

# docker network create my-network
# localhost == host.docker.internal
